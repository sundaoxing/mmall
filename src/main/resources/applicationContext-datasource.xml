<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.mmall" annotation-config="true" />

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="2" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8" />
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <!--连接池启动时的初始值-->
        <property name="initialSize" value="${db.initialSize}" />
        <!--连接池的最大值-->
        <property name="maxActive" value="${db.maxActive}" />
        <!--最大空闲值：当经过一个高峰的时间后，连接池可以将不用的连接慢慢释放，一致减少到maxIdle为止-->
        <property name="maxIdle" value="${db.maxIdle}" />
        <!--最小空闲值：当空闲的连接数少于阀值，连接池就会去预申请一些连接，避免高峰访问-->
        <property name="minIdle" value="${db.minIdle}" />
        <!--最大建立等待时间，如果超过此时间将抛出异常，设置为-1：代表无限制-->
        <property name="maxWait" value="${db.maxWait}" />
        <!--默认自动提交-->
        <property name="defaultAutoCommit" value="${db.defaultAutoCommit}" />
        <!--连接的有效时间，默认为30分钟-->
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
        <!--回收被遗弃的（忘了释放的）数据库连接到连接池中-->
        <property name="removeAbandoned" value="${db.removeAbandoned}" />
        <!--数据库连接过多长时间不用将视为被遗弃而回收到连接池中-->
        <property name="removeAbandonedTimeout" value="${db.removeAbandonedTimeout}" />
        <!--<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />-->
        <!--<property name="testWhileIdle" value="${db.testWhileIdle}" />-->
        <!--<property name="validationQuery" value="${db.validationQuery}" />-->
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:mappers/*Mapper.xml" />
        <!--分页插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mmall.dao"/>
    </bean>

    <!--使用@Transactional进行声明式事务管理，需要申明下面这行-->
    <tx:annotation-driven
            transaction-manager="transactionManager"
            proxy-target-class="true"/>
    <!--事务管理-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <property name="rollbackOnCommitFailure" value="true" />
    </bean>
</beans>